{% extends "front/base.html.twig" %}

{% block main %}


	<div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
		<div class="carousel-indicators">
			<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
			<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
			<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
		</div>
		<div class="carousel-inner">
			<div class="carousel-item active">
				<img src="{{ asset('images/' ~ product.images[0].src) }}" class="d-block w-100" alt="{{ product.images[0].alt }}">
			</div>
			{% for image in product.images | slice(1,)%}
				<div class="carousel-item">
					<img src="{{ asset('images/' ~ image.src) }}" class="d-block w-100" alt="{{ image.alt }}">
				</div>
			{% endfor %}

		</div>
		<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
			<span class="carousel-control-prev-icon bg-dark" aria-hidden="true"></span>
			<span class="visually-hidden">Previous</span>
		</button>
		<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
			<span class="carousel-control-next-icon bg-dark" aria-hidden="true"></span>
			<span class="visually-hidden">Next</span>
		</button>
	</div>

	<h1>{{ product.name }}</h1>


	<a href="{{ path("like_product", {'id' : product.id } ) }}" class="btn btn-link js-likes">

		{% if app.user and product.isLikeByUser(app.user) %}
			<i class="fas fa-thumbs-up"></i>
		{% else %}
			<i class="far fa-thumbs-up"></i>
		{% endif %}


		<span class="js-likes">{{ product.likes | length }}</span>
		<span class="js-label">J'aime</span>

	</a>

	<a href="{{ path("dislike_product", {'id' : product.id } ) }}" class="btn btn-link js-dislikes">

		{% if app.user and product.isDislikeByUser(app.user) %}
			<i class="fas fa-thumbs-down"></i>
		{% else %}
			<i class="far fa-thumbs-down"></i>
		{% endif %}


		<span class="js-dislikes">{{ product.dislikes | length }}</span>
		<span class="js-label">Je n'aime pas</span>

	</a>

	<a href="{{ path('add_cart', {'id' : product.id}) }}">Mettre au panier</a>


	<h2>{{ product.price }}</h2>
	<h2>{{ product.stock }}</h2>

	<h3>{{ product.category.name }}</h3>
	<h3>{{ product.licence.name }}</h3>

	<hr>
	<h2>Commentaires</h2>

	{% if product.comments %}
		{% for comment in product.comments %}
			<h3>Par :
				{{ comment.user.name }}
				{{ comment.user.firstname }}</h3>
			<h3>Le :
				{{ comment.date | date('d/m/Y') }}</h3>
			<p>{{ comment.content }}</p>
			{% if app.user is same as(comment.user) %}

				<a href="{{ path('comment_update', {'id' : comment.id } ) }}">Modifier votre commentaire</a>
				<a href="{{ path('comment_delete', {'id' : comment.id } ) }}">Supprimer votre commentaire</a>

			{% endif %}
		{% endfor %}
	{% endif %}

	{% if app.user %}

		{{form(commentForm)}}

			{% else %}
				<h4>Vous devez être connecté pour commenter</h4>
		{% endif %}


	{% endblock %}

	{% block js %}

		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
		<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

		<script>

			function onClickLike(event) {
event.preventDefault();

const url = this.href;
const spanCount = this.querySelector('span.js-likes');
const icone = this.querySelector('i');

axios.get(url).then(function (response) {
spanCount.textContent = response.data.likes;
if (icone.classList.contains('fas')) {
icone.classList.replace('fas', 'far')
} else {
icone.classList.replace('far', 'fas')
}

if (response.data.message == "Like ajouté et dislike supprimé") {
const spanDis = document.querySelector('span.js-dislikes');
const iconeDis = document.querySelector('i.fa-thumbs-down');

spanDis.textContent = response.data.dislikes;

if (iconeDis.classList.contains('fas')) {
iconeDis.classList.replace('fas', 'far')
} else {
iconeDis.classList.replace('far', 'fas')
}
}
}).catch(function (error) {
if (error.response.status === 403) {
window.alert("Connexion requise");
} else {
window.alert("Une erreur s'est produite");
}
})
}


function onClickDislike(event) {
event.preventDefault();

const urlDis = this.href;
const spanCountDis = this.querySelector('span.js-dislikes');
const iconeDislike = this.querySelector('i');

axios.get(urlDis).then(function (response) {
spanCountDis.textContent = response.data.dislikes;
if (iconeDislike.classList.contains('fas')) {
iconeDislike.classList.replace('fas', 'far')
} else {
iconeDislike.classList.replace('far', 'fas')
}

if (response.data.message == "Like supprimé et dislike ajouté") {
const spanLike = document.querySelector('span.js-likes');
const iconeLike = document.querySelector('i.fa-thumbs-up');

spanLike.textContent = response.data.likes;

if (iconeLike.classList.contains('fas')) {
iconeLike.classList.replace('fas', 'far')
} else {
iconeLike.classList.replace('far', 'fas')
}
}
}).catch(function (error) {
if (error.response.status === 403) {
window.alert("Connexion requise");
} else {
window.alert("Une erreur s'est produite");
}
})
}


document.querySelector('a.js-likes').addEventListener('click', onClickLike);

document.querySelector('a.js-dislikes').addEventListener('click', onClickDislike);
		</script>
	{% endblock %}
